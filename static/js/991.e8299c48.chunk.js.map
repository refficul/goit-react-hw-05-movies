{"version":3,"file":"static/js/991.e8299c48.chunk.js","mappings":"4QACaA,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wcAkBvBC,EAAUH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mE,SCdjB,SAASG,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAChBI,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WACW,SAAAC,IAYlB,OAZkBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAnB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC+B,OAAvBJ,EAAQ,UAAAK,OAAaZ,EAAE,YAAAS,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAERE,EAAAA,EAAAA,GAASN,GAAU,KAAD,EAA/BC,EAAIC,EAAAK,KAEVf,EAAUS,EAAKO,KAAKC,MAAMP,EAAAE,KAAA,gBAGD,OAHCF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE1BS,QAAQC,MAAKV,EAAAQ,IACbG,MAAM,mBAAmBX,EAAAY,OAAA,SAAAZ,EAAAQ,IAAA,eAAAR,EAAAC,KAAA,GAAAD,EAAAa,OAAA,6BAAAb,EAAAc,OAAA,GAAAjB,EAAA,yBAI5BkB,MAAA,KAAAC,UAAA,EAbc,WACItB,EAAAqB,MAAC,KAADC,UAAA,CAanBC,EACF,GAAG,CAAC1B,KAEF2B,EAAAA,EAAAA,KAACpC,EAAO,CAAAqC,SACL9B,EAAO+B,KAAI,SAAAC,GAAK,OACfC,EAAAA,EAAAA,MAAC5C,EAAW,CAAAyC,SAAA,EACVD,EAAAA,EAAAA,KAAA,OACEK,IACEF,EAAMG,aAAY,mCAAArB,OACqBkB,EAAMG,cACzC,sDAENC,IAAKJ,EAAMK,QAEbR,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAMK,QACXJ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,gBAAcE,EAAMM,UAAU,SAVjBN,EAAM9B,GAWV,KAItB,C,8FCzCaa,EAAQ,eAAAwB,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,EAAU+B,EAASC,GAAI,IAAA/B,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjC6B,EAAAA,EAAAA,IAAU,GAAD5B,OAHb,gCAGyBA,OAAGL,GAAY,CACrDkC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,MAAON,EACPC,KAAMA,EACNM,eAAe,KAEhB,KAAD,EARQ,OAAJrC,EAAIC,EAAAK,KAAAL,EAAAY,OAAA,SAUHb,GAAI,wBAAAC,EAAAc,OAAA,GAAAjB,EAAA,KACZ,gBAZoBwC,EAAAC,EAAAC,GAAA,OAAAX,EAAAb,MAAA,KAAAC,UAAA,I","sources":["pages/Cast/CastPage.styled.js","pages/Cast/CastPage.js","takeApi.js"],"sourcesContent":["import styled from 'styled-components';\nexport const WrapperCard = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  /* gap: 50px;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 4px; */\n  flex-basis: calc((100% - 30px) / 4);\n  /* gap: 10px; */\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  list-style: none;\n`;\nexport const Wrapper = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n\n  padding: 0;\n`;\n","import { fetchApi } from 'takeApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Wrapper, WrapperCard } from './CastPage.styled';\n\nexport default function Casts() {\n  const [actors, setActors] = useState([]);\n  const { id } = useParams();\n  // const location = useLocation();\n  // console.log(location);\n  useEffect(() => {\n    async function getI() {\n      const endPoint = `/movie/${id}/credits`;\n      try {\n        const resp = await fetchApi(endPoint);\n\n        setActors(resp.data.cast);\n      } catch (error) {\n        console.error(error);\n        alert('something wrong');\n        return error;\n      } finally {\n      }\n    }\n    getI();\n  }, [id]);\n  return (\n    <Wrapper>\n      {actors.map(actor => (\n        <WrapperCard key={actor.id}>\n          <img\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                : 'https://gdr.one/simg/200x305/5094bd/fff?text=Avatar'\n            }\n            alt={actor.name}\n          ></img>\n          <h3>{actor.name}</h3>\n          <p>character : \"{actor.character}\"</p>\n        </WrapperCard>\n      ))}\n    </Wrapper>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchApi = async (endPoint, keyWord, page) => {\n  const resp = await axios.get(`${BASE_URL}${endPoint}`, {\n    params: {\n      api_key: '0e060fef59f82b92b22ec2f5c3e6f8ae',\n      language: 'en-US',\n      query: keyWord,\n      page: page,\n      include_adult: true,\n    },\n  });\n\n  return resp;\n};\n"],"names":["WrapperCard","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Casts","_useState","useState","_useState2","_slicedToArray","actors","setActors","id","useParams","useEffect","_getI","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","resp","_context","prev","next","concat","fetchApi","sent","data","cast","t0","console","error","alert","abrupt","finish","stop","apply","arguments","getI","_jsx","children","map","actor","_jsxs","src","profile_path","alt","name","character","_ref","keyWord","page","axios","params","api_key","language","query","include_adult","_x","_x2","_x3"],"sourceRoot":""}